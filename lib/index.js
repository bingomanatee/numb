!function(i,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(i=i||self).SCHEMA=t()}(this,(function(){"use strict";const i=Symbol("absent"),t="ifValid,ifInvalid,ifPositive,ifNegative,ifWhole,ifZero,ifLT,ifGT,ifLTE,ifGTE,ifEQ".split(","),s="isValid,isInvalid,isPositive,isNegative,isWhole,isZero,isInfinite,isInfiniteNeg,isEven,isOdd".split(","),e="isGT,isLT,isGTE,isLTE,isEq,isMultOf,isNotMultOf".split(","),n={n:i=>!Number.isNaN(i)&&("number"==typeof i||"bigint"==typeof i),f:i=>"function"==typeof i,s:i=>"string"==typeof i,nil:i=>null===i,a:i=>Array.isArray(i)},r=i=>{if(i instanceof d)return[i.value];if(!Array.isArray(i))return[i];let t=[];for(let s=0;s<i.length;++s){const e=i[s];Array.isArray(e)?t=t.concat(r(e)):t.push(e)}return t.map(h)},h=i=>i instanceof d?i.value:i,a=(i,t)=>i instanceof d?i:new d(i,t),l="undefined"!=typeof Proxy?new Proxy({},{get:(i,s)=>t.includes(s)||"else"===s?()=>l:i[s]}):{};function u(r,h,a=i){return new Proxy(r,{get:(u,d)=>"else"===d?t=>{if(s.includes(h)){if(r[h])return l;n.f(t)&&t(r.source)}return e.includes(h)&&a!==i?r[h](a)?l:(n.f(t)&&t(r.source),r):r}:r[h]?t.includes(d)?Reflect.getPrototypeOf(r)[d].bind(r):r[d]:l[d]})}class d{constructor(t,s=i){if(this.source=t,this.alt=s,n.f(t))try{this.value=t()}catch(t){s!==i?n.f(s)?this.value=s(t):this.value=s:this.value=NaN}else this.value=t,n.f(s)&&this.fix(s);this._lock=!0}catch(i){this._catch=i}do(i,t){this._f(i,t);try{return i(this.value)}catch(i){if(this._catch)return this._catch(i,t);throw i}}doV(i,t){this._f(i,t);try{return i(this.source)}catch(i){if(this._catch)return this._catch(i,t);throw i}}fix(i){return this.isInvalid&&(n.f(i)?this._value=this.doV(i):this._value=i),this}get type(){return typeof this.value}get originalType(){return typeof this.source}then(i){return this.isValid?this.do(i):l}else(i){return this.isValid?l:(this.do(()=>i(this.source)),this)}set value(i){if(this._lock)throw new Error("cannot update value of numb");n.n(i)||n.nil(i)?this._value=i:n.s(i)?this._value=Number.parseFloat(i):this._value=Number.NaN}get value(){return this._value}get isValid(){return n.n(this.value)}get isInvalid(){return!n.n(this.value)}abs(){return this.isValid&&this.isNegative?this.negate():this}absN(){return this.isValid&&this.isPositive?this.negate():this}ceil(){if(this.isInvalid)return this;const i=Math.ceil(this.value);return new d(i)}floor(){if(this.isInvalid)return this;const i=Math.floor(this.value);return new d(i)}round(){return this.isInvalid?this:new d(Math.round(this.value))}mod(i){return i instanceof d&&(i=i.value),!n.n(i)||this.isInvalid?d.doc(this,"mod",i):new d(this.value%i)}sq(){return this.isInvalid?new d(Number.NaN):new d(this.value**2)}sqrt(i){return this.isInvalid?this:this.value<0?i?this.negate().sqrt().negate():d.doc(this,"sqrt"):a(Math.sqrt(this.value))}negate(){return this.times(-1)}pow(i){if(this.isInvalid)return this;const t=a(i);return t.isInvalid?a(NaN):a(this.value**t.value)}times(i,t){const s=a(i);return t&&s.isInvalid?this:this.isInvalid||!s.isValid?d.doc(this,"times",i):new d(this.value*s.value)}div(i){const t=a(i);return this.isInvalid||t.isInvalid?d.doc(this,"times",i):new d(this.value/t.value)}sum(i,t=!1){let s=r(i);if(this.isValid&&s.push(this.value),t)s=s.filter(n.n);else if(!s.every(n.n))return a(NaN);return a(s.reduce((i,t)=>i+h(t),0))}add(...i){return this.plus(...i)}sub(...i){return this.minus(...i)}sin(i=!1){return this.isInvalid?this:i?this.deg2rad().sin():a(Math.sin(this.value))}cos(i=!1){return this.isInvalid?this:i?this.deg2rad().cos():a(Math.cos(this.value))}tan(i=!1){return this.isInvalid?this:i?this.deg2rad().tan():a(Math.tan(this.value))}arcSin(i=!1){return this.isInvalid?this:i?this.arcSin().rad2deg():a(Math.asin(this.value))}arcCos(i=!1){return this.isInvalid?this:i?this.arcCos().rad2deg():a(Math.acos(this.value))}arcTan(i=!1){return this.isInvalid?this:i?this.arcTan().rad2deg():a(Math.atan(this.value))}arcTan2(i,t=!1){return a(i).isInvalid?d.doc(this,"atan2",i,t):this.isInvalid?this:t?a(Math.atan2(this.value,i.value)).rad2deg():a(Math.atan2(this.value,i.value))}log(){return this.isInvalid?this:a(Math.log(this.value))}log10(){return this.isInvalid?this:a(Math.log10(this.value))}clampDeg(){return this.isInvalid?this:this.isNegative?a(360).minus(this.abs().clampDeg()):this.mod(360)}clampDeg180(){if(this.isInvalid)return this;if(this.isEq(-180))return this;const i=this.clampDeg();return i.isGT(180)?i.sub(360):i}rad2deg(){return this.isInvalid?this:this.times(180/Math.PI)}deg2rad(){return this.isInvalid?this:this.times(Math.PI/180)}pi(){return a(Math.PI)}sumS(...i){return a().sum(...i)}mean(i,t=!1){let s=r(i);if(this.isValid&&s.push(this.value),t)s=s.filter(n.n);else if(!s.every(n.n))return d.doc(this,"mean",s);return s.length<1?d.doc(this,"mean",s):this.sum(s).div(s.length)}meanS(...i){return a().mean(...i)}minus(i,t=!1){const s=a(i);if(t){if(s.isInvalid)return this;if(this.isInvalid)return s.negate()}else if(s.isInvalid||this.isInvalid)return a(NaN);return new d(this.value-s.value)}plus(i,t=!1){const s=a(i);if(t){if(s.isInvalid)return this;if(this.isInvalid)return s}else if(s.isInvalid||this.isInvalid)return a(NaN);return a(this.value+s.value)}max(i,t=!1){const s=r(i);if(i.length<1)return this;if(t){const i=[this.value,...s].map(h).filter(n.n);return i.length<1?d.doc(this,"max",s):new d(i.shift()).max(i)}return this.isInvalid||!s.every(n.n)?d.doc(this,"max",s):new d(Math.max(...s,this.value))}min(i,t=!1){const s=r(i);if(i.length<1)return this;if(t){const i=[this.value,...s].map(h).filter(n.n);return i.length<1?d.doc(this,"min",s,!0):new d(i.shift()).min(i)}return this.isInvalid||!s.every(n.n)?d.doc(this,"min",s):new d(Math.min(...s,this.value))}clamp(i,t,s=!1){if(Array.isArray(i))return this.clamp(...i);if(this.isInvalid)return this;const e=a(i),n=a(t);if(!s&&(e.isInvalid||n.isInvalid))return d.doc(this,"clamp",i,t);const r=e.min(t),h=e.max(t);return this.max(r).min(h)}get isInfinite(){return this.isInvalid?null:this.value===Number.POSITIVE_INFINITY}get isInfiniteNeg(){return this.isInvalid?null:this.value===Number.NEGATIVE_INFINITY}get isWhole(){return this.isInvalid?null:this.value===Math.round(this.value)&&!this.isNegative}get isFloat(){return this.isInvalid?null:this.value!==Math.round(this.value)}get isPositive(){return this.isInvalid?null:this.value>0}get isNegative(){return this.isInvalid?null:this.value<0}get isZero(){return this.isInvalid?null:0===this.value}isGT(i){return n.n(i)?this.isInvalid?null:this.value>i:null}isLT(i){return n.n(i)?this.isInvalid?null:this.value<i:null}isGTE(i){return n.n(i)?this.isInvalid?null:this.value>=i:null}isLTE(i){return n.n(i)?this.isInvalid?null:this.value<=i:null}isEq(i){return n.n(i)?this.isInvalid?null:this.value===i:null}isMultOf(i){return n.n(i)?this.isInvalid?null:!(this.value%i):null}_f(i,t=""){if(!n.f(i))throw new Error(`numb.${t}: `+`${this.value}`+" called with non function "+`${i}`)}if(i,t,r,h){if("isInvalid"===i)return this.isInvalid?this.doV(t):n.f(r)?this.do(r):void 0;if("isValid"===i)return this.isValid?this.do(t):n.f(r)?this.doV(r,i):void 0;if(this.isInvalid)return n.f(h)?this.doV(h):void 0;if(n.f(i)){if(this.do(i))return this.do(t,!0);if(n.f(r))return this.doV(r)}else{if(n.a(i)){const[s,n]=i;if(e.includes(s))return this.if(()=>this[s](n),t,r,h);throw new Error(`cannot find test ${s}`)}if(n.s(i)){if(s.includes(i))return this[i]?this.do(t,i):void(n.f(r)&&this.do(r,i));throw new Error(`bad test ${i}`)}!0===i?this.do(t,i):!1===i?this.do(r,i):this.if(i===this.value,t,r,h)}}ifValid(i,t){return this.if("isValid",i,t),u(this,"isValid")}ifInvalid(i,t){return this.if("isInvalid",i,t),u(this,"isInvalid")}ifPositive(i,t,s){return this.if("isPositive",i,t,s),u(this,"isPositive")}ifNegative(i,t,s){return this.if("isNegative",i,t,s),u(this,"isNegative")}ifZeroero(i,t,s){return this.if("isZero",i,t,s),u(this,"isZero")}ifWhole(i,t,s){return this.if("isWhole",i,t,s),u(this,"isWhole")}float(i,t,s){return this.if("isFloat",i,t,s),u(this,"isValid")}ifInfinite(i,t,s){return this.if("isInfinite",i,t,s),u(this,"isInfinite")}ifInfiniteNeg(i,t,s){return this.if("isInfiniteNeg",i,t,s),u(this,"isInfiniteNeg")}ifEven(i,t,s){return this.if("isEven",i,t,s),u(this,"isEven")}ifOodd(i,t,s){return this.if("isOdd",i,t,s),u(this,"isOdd")}ifGT(i,t,s,e){return this.if(["isGT",i],t,s,e),u(this,"isGT",i)}ifMultOf(i,t,s,e){return this.if(t=>!(t%i),t,s,e),u(this,"isMultOf",i)}ifGTE(i,t,s,e){return this.if(t=>t>=i,t,s,e),u(this,"isGTE",i)}ifLT(i,t,s,e){return this.if(t=>t<i,t,s,e),u(this,"isLT",i)}ifLTE(i,t,s,e){return this.if(t=>t<=i,t,s,e),u(this,"isLTE",i)}ifEQ(i,t,s,e){return this.if(t=>t===i,t,s,e),u(this,"isEq",i)}firstGood(...t){return r(t).reduce((t=i,s)=>t.isValid?t:new d(s),a(NaN))}}return d.doc=(i,...t)=>{const s=new d(NaN);return s.error=t,s},a}));